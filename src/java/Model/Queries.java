/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Model;

/**
 *
 * @author FV
 */
public enum Queries {
    startEnum(""),
    returnSizeCateg("SELECT * FROM PRODUCT_SIZE_TABLE"),
    returnGenderCateg("SELECT * FROM PRODUCT_GENDER_TABLE"),
    returnSalesQuery("SELECT \n"
            + "USER_TABLE.USER_EMAIL AS EMAIL,\n"
            + "ORDER_TABLE.ORDER_NAME AS NAME,\n"
            + "ORDER_TABLE.ORDER_QUANTITY AS QUANTITY,\n"
            + "ORDER_TABLE.ORDER_PRICE AS PRICE,\n"
            + "ORDER_TABLE.ORDER_DATE AS DATE_ORDER,\n"
            + "ORDER_TABLE.ORDER_ADDRESS AS ADDRESS,\n"
            + "ORDER_TABLE.ORDER_DATE_COMPLETED AS COMPLETED\n"
            + "FROM ORDER_TABLE \n"
            + "JOIN USER_TABLE ON USER_TABLE.USER_ID = ORDER_TABLE.USER_ID\n"
            + "AND ORDER_TABLE.ORDER_DATE_COMPLETED IS NOT NULL\n"
            + "AND ORDER_TABLE.ORDER_DATE BETWEEN ? AND ?\n"
            + "ORDER BY ORDER_TABLE.ORDER_DATE ASC"),
    returnallOrders("SELECT \n"
            + "ORDER_TABLE.ORDER_ID,\n"
            + "USER_TABLE.USER_EMAIL,\n"
            + "ORDER_TABLE.ORDER_NAME,\n"
            + "ORDER_TABLE.ORDER_QUANTITY,\n"
            + "ORDER_TABLE.ORDER_PRICE,\n"
            + "ORDER_TABLE.ORDER_ADDRESS,\n"
            + "ORDER_TABLE.ORDER_DATE,\n"
            + "ORDER_TABLE.ORDER_DATE_COMPLETED,\n"
            + "ORDER_TABLE.ORDER_ISPAID,\n"
            + "ORDER_TABLE.ORDER_IMG_LINK\n"
            + "FROM ORDER_TABLE \n"
            + "JOIN USER_TABLE ON USER_TABLE.USER_ID = ORDER_TABLE.USER_ID\n"
            + "ORDER BY ORDER_TABLE.ORDER_DATE_COMPLETED DESC, ORDER_TABLE.ORDER_DATE DESC"),
    returnAllPendingOrders("SELECT \n"
            + "USER_TABLE.USER_EMAIL AS EMAIL,\n"
            + "ORDER_TABLE.ORDER_NAME AS ORDER_NAME,\n"
            + "ORDER_TABLE.ORDER_QUANTITY AS QUANTITY,\n"
            + "ORDER_TABLE.ORDER_PRICE AS PRICE,\n"
            + "ORDER_TABLE.ORDER_DATE AS ODATE,\n"
            + "ORDER_TABLE.ORDER_ADDRESS AS OADDRESS,\n"
            + "ORDER_TABLE.ORDER_DATE_COMPLETED AS ODCOMPLETE\n"
            + "FROM ORDER_TABLE \n"
            + "JOIN USER_TABLE ON USER_TABLE.USER_ID = ORDER_TABLE.USER_ID\n"
            + "AND ORDER_TABLE.ORDER_DATE_COMPLETED IS NULL\n"
            + "ORDER BY ORDER_TABLE.ORDER_DATE ASC"),
    returnInventory("SELECT DISTINCT\n"
            + "PRODUCT_TABLE.PRODUCT_NAME,\n"
            + "PRODUCT_GENDER_TABLE.PRODUCT_GENDER,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_PRICE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_STOCK\n"
            + "FROM PRODUCT_VARIANT_TABLE\n"
            + "JOIN PRODUCT_TABLE ON PRODUCT_TABLE.PRODUCT_ID = PRODUCT_VARIANT_TABLE.PRODUCT_ID\n"
            + "JOIN PRODUCT_GENDER_TABLE ON PRODUCT_VARIANT_TABLE.PRODUCT_GENDER_ID = PRODUCT_GENDER_TABLE.PRODUCT_GENDER_ID\n"
            + "JOIN PRODUCT_SIZE_TABLE ON PRODUCT_SIZE_TABLE.PRODUCT_SIZE_ID = PRODUCT_VARIANT_TABLE.PRODUCT_SIZE_ID ORDER BY PRODUCT_STOCK ASC"),
    returnAllCompleted("SELECT \n"
            + "USER_TABLE.USER_EMAIL,\n"
            + "ORDER_TABLE.ORDER_NAME,\n"
            + "ORDER_TABLE.ORDER_QUANTITY,\n"
            + "ORDER_TABLE.ORDER_PRICE,\n"
            + "ORDER_TABLE.ORDER_DATE,\n"
            + "ORDER_TABLE.ORDER_ADDRESS,\n"
            + "ORDER_TABLE.ORDER_DATE_COMPLETED\n"
            + "FROM ORDER_TABLE \n"
            + "JOIN USER_TABLE ON USER_TABLE.USER_ID = ORDER_TABLE.USER_ID\n"
            + "AND ORDER_TABLE.ORDER_DATE_COMPLETED IS NOT NULL"),
    returnOrderDateRange("SELECT * FROM ORDER_TABLE WHERE ORDER_DATE_COMPLETED BETWEEN ? AND ? \n"
            + "ORDER BY ORDER_DATE ASC"),
    returnallUsers("SELECT \n"
            + "USER_EMAIL AS EMAIL,\n"
            + "USER_ROLE AS ROLE\n"
            + "FROM USER_TABLE"),
    returnproductSchool("SELECT DISTINCT\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_ID,\n"
            + "PRODUCT_TABLE.PRODUCT_NAME,\n"
            + "PRODUCT_TABLE.PRODUCT_DESC,\n"
            + "PRODUCT_TABLE.PRODUCT_SCHOOL,\n"
            + "PRODUCT_TABLE.PRODUCT_IMG_LINK,\n"
            + "PRODUCT_GENDER_TABLE.PRODUCT_GENDER,\n"
            + "PRODUCT_SIZE_TABLE.PRODUCT_SIZE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_PRICE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_STOCK\n"
            + "FROM PRODUCT_VARIANT_TABLE\n"
            + "JOIN PRODUCT_TABLE ON PRODUCT_TABLE.PRODUCT_ID = PRODUCT_VARIANT_TABLE.PRODUCT_ID\n"
            + "JOIN PRODUCT_GENDER_TABLE ON PRODUCT_VARIANT_TABLE.PRODUCT_GENDER_ID = PRODUCT_GENDER_TABLE.PRODUCT_GENDER_ID\n"
            + "JOIN PRODUCT_SIZE_TABLE ON PRODUCT_SIZE_TABLE.PRODUCT_SIZE_ID = PRODUCT_VARIANT_TABLE.PRODUCT_SIZE_ID\n"
            + "AND PRODUCT_TABLE.PRODUCT_SCHOOL = ? "),
    signUp("INSERT INTO USER_TABLE (USER_PASSWORD, USER_ROLE, USER_EMAIL) "
            + "VALUES (?, ?, ?)"),
    logIn("SELECT * FROM USER_TABLE WHERE USER_EMAIL = ?"),
    specificProduct("SELECT DISTINCT\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_ID,\n"
            + "PRODUCT_TABLE.PRODUCT_NAME,\n"
            + "PRODUCT_TABLE.PRODUCT_DESC,\n"
            + "PRODUCT_TABLE.PRODUCT_SCHOOL,\n"
            + "PRODUCT_TABLE.PRODUCT_IMG_LINK,\n"
            + "PRODUCT_GENDER_TABLE.PRODUCT_GENDER,\n"
            + "PRODUCT_SIZE_TABLE.PRODUCT_SIZE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_PRICE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_STOCK\n"
            + "FROM PRODUCT_VARIANT_TABLE\n"
            + "JOIN PRODUCT_TABLE ON PRODUCT_TABLE.PRODUCT_ID = PRODUCT_VARIANT_TABLE.PRODUCT_ID\n"
            + "JOIN PRODUCT_GENDER_TABLE ON PRODUCT_VARIANT_TABLE.PRODUCT_GENDER_ID = PRODUCT_GENDER_TABLE.PRODUCT_GENDER_ID\n"
            + "JOIN PRODUCT_SIZE_TABLE ON PRODUCT_SIZE_TABLE.PRODUCT_SIZE_ID = PRODUCT_VARIANT_TABLE.PRODUCT_SIZE_ID\n"
            + "AND PRODUCT_TABLE.PRODUCT_SCHOOL = ? \n"
            + "AND PRODUCT_VARIANT_TABLE.PRODUCT_ID = ? AND PRODUCT_VARIANT_TABLE.PRODUCT_STOCK > 0"),
    allPendingServletViewOrders("SELECT \n"
            + "ORDER_TABLE.ORDER_ID,\n"
            + "USER_TABLE.USER_EMAIL,\n"
            + "ORDER_TABLE.ORDER_NAME,\n"
            + "ORDER_TABLE.ORDER_QUANTITY,\n"
            + "ORDER_TABLE.ORDER_PRICE,\n"
            + "ORDER_TABLE.ORDER_ADDRESS,\n"
            + "ORDER_TABLE.ORDER_DATE,\n"
            + "ORDER_TABLE.ORDER_DATE_COMPLETED,\n"
            + "ORDER_TABLE.ORDER_ISPAID,\n"
            + "ORDER_TABLE.ORDER_IMG_LINK\n"
            + "FROM ORDER_TABLE \n"
            + "JOIN USER_TABLE ON USER_TABLE.USER_ID = ORDER_TABLE.USER_ID\n"
            + "AND ORDER_TABLE.ORDER_DATE_COMPLETED IS NULL"),
    querywithSize("SELECT DISTINCT\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_ID,\n"
            + "PRODUCT_TABLE.PRODUCT_NAME,\n"
            + "PRODUCT_TABLE.PRODUCT_DESC,\n"
            + "PRODUCT_TABLE.PRODUCT_SCHOOL,\n"
            + "PRODUCT_TABLE.PRODUCT_IMG_LINK,\n"
            + "PRODUCT_GENDER_TABLE.PRODUCT_GENDER,\n"
            + "PRODUCT_SIZE_TABLE.PRODUCT_SIZE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_PRICE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_STOCK\n"
            + "FROM PRODUCT_VARIANT_TABLE\n"
            + "JOIN PRODUCT_TABLE ON PRODUCT_TABLE.PRODUCT_ID = PRODUCT_VARIANT_TABLE.PRODUCT_ID\n"
            + "JOIN PRODUCT_GENDER_TABLE ON PRODUCT_VARIANT_TABLE.PRODUCT_GENDER_ID = PRODUCT_GENDER_TABLE.PRODUCT_GENDER_ID\n"
            + "JOIN PRODUCT_SIZE_TABLE ON PRODUCT_SIZE_TABLE.PRODUCT_SIZE_ID = PRODUCT_VARIANT_TABLE.PRODUCT_SIZE_ID\n"
            + "AND PRODUCT_GENDER_TABLE.PRODUCT_GENDER LIKE ? ESCAPE '!'\n"
            + "AND PRODUCT_VARIANT_TABLE.PRODUCT_PRICE BETWEEN ? AND ? \n"
            + "AND PRODUCT_TABLE.PRODUCT_SCHOOL LIKE ? ESCAPE '!'"
            + "AND PRODUCT_SIZE_TABLE.PRODUCT_SIZE = ?"),
    querywithOutSize("SELECT DISTINCT\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_ID,\n"
            + "PRODUCT_TABLE.PRODUCT_NAME,\n"
            + "PRODUCT_TABLE.PRODUCT_DESC,\n"
            + "PRODUCT_TABLE.PRODUCT_SCHOOL,\n"
            + "PRODUCT_TABLE.PRODUCT_IMG_LINK,\n"
            + "PRODUCT_GENDER_TABLE.PRODUCT_GENDER,\n"
            + "PRODUCT_SIZE_TABLE.PRODUCT_SIZE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_PRICE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_STOCK\n"
            + "FROM PRODUCT_VARIANT_TABLE\n"
            + "JOIN PRODUCT_TABLE ON PRODUCT_TABLE.PRODUCT_ID = PRODUCT_VARIANT_TABLE.PRODUCT_ID\n"
            + "JOIN PRODUCT_GENDER_TABLE ON PRODUCT_VARIANT_TABLE.PRODUCT_GENDER_ID = PRODUCT_GENDER_TABLE.PRODUCT_GENDER_ID\n"
            + "JOIN PRODUCT_SIZE_TABLE ON PRODUCT_SIZE_TABLE.PRODUCT_SIZE_ID = PRODUCT_VARIANT_TABLE.PRODUCT_SIZE_ID\n"
            + "AND PRODUCT_GENDER_TABLE.PRODUCT_GENDER LIKE ? ESCAPE '!'\n"
            + "AND PRODUCT_VARIANT_TABLE.PRODUCT_PRICE BETWEEN ? AND ? \n"
            + "AND PRODUCT_TABLE.PRODUCT_SCHOOL LIKE ? ESCAPE '!'"),
    returnProductList("SELECT * FROM PRODUCT_TABLE"),
    returnProductVariation("SELECT DISTINCT\n"
            + "PRODUCT_VARIANT_TABLE.VARIANT_ID,\n"
            + "PRODUCT_GENDER_TABLE.PRODUCT_GENDER,\n"
            + "PRODUCT_SIZE_TABLE.PRODUCT_SIZE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_PRICE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_STOCK\n"
            + "FROM PRODUCT_VARIANT_TABLE\n"
            + "JOIN PRODUCT_TABLE ON PRODUCT_TABLE.PRODUCT_ID = PRODUCT_VARIANT_TABLE.PRODUCT_ID\n"
            + "JOIN PRODUCT_GENDER_TABLE ON PRODUCT_VARIANT_TABLE.PRODUCT_GENDER_ID = PRODUCT_GENDER_TABLE.PRODUCT_GENDER_ID\n"
            + "JOIN PRODUCT_SIZE_TABLE ON PRODUCT_SIZE_TABLE.PRODUCT_SIZE_ID = PRODUCT_VARIANT_TABLE.PRODUCT_SIZE_ID\n"
            + "AND PRODUCT_VARIANT_TABLE.PRODUCT_ID = ?"),
    returnProductStocks("SELECT DISTINCT\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_ID,\n"
            + "PRODUCT_TABLE.PRODUCT_NAME,\n"
            + "PRODUCT_TABLE.PRODUCT_DESC,\n"
            + "PRODUCT_TABLE.PRODUCT_SCHOOL,\n"
            + "PRODUCT_TABLE.PRODUCT_IMG_LINK,\n"
            + "PRODUCT_GENDER_TABLE.PRODUCT_GENDER,\n"
            + "PRODUCT_SIZE_TABLE.PRODUCT_SIZE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_PRICE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_STOCK\n"
            + "FROM PRODUCT_VARIANT_TABLE\n"
            + "JOIN PRODUCT_TABLE ON PRODUCT_TABLE.PRODUCT_ID = PRODUCT_VARIANT_TABLE.PRODUCT_ID\n"
            + "JOIN PRODUCT_GENDER_TABLE ON PRODUCT_VARIANT_TABLE.PRODUCT_GENDER_ID = PRODUCT_GENDER_TABLE.PRODUCT_GENDER_ID\n"
            + "ORDER BY PRODUCT_VARIANT_TABLE.PRODUCT_STOCK ASC"),
    addProduct("INSERT INTO PRODUCT_TABLE (PRODUCT_NAME, PRODUCT_DESC, PRODUCT_SCHOOL, PRODUCT_CATEGORY, PRODUCT_IMG_LINK) \n"
            + "	VALUES (?, ?, ?, ?, ?)"),
    addProductVariation("INSERT INTO PRODUCT_VARIANT_TABLE (PRODUCT_ID, PRODUCT_GENDER_ID, PRODUCT_SIZE_ID, PRODUCT_PRICE, PRODUCT_STOCK) \n"
            + "	VALUES (?, ?, ?, ?, ?)"),
    deleteProduct("DELETE FROM PRODUCT_TABLE WHERE PRODUCT_ID = ?"),
    deleteProductVariation("DELETE FROM PRODUCT_VARIANT_TABLE WHERE VARIANT_ID = ?"),
    deleteProductinVarition("DELETE FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = ?"),
    updateProduct("UPDATE PRODUCT_TABLE SET \"PRODUCT_NAME\" = ?, \"PRODUCT_DESC\" = ?, \"PRODUCT_SCHOOL\" = ?, \"PRODUCT_CATEGORY\" = ?, \"PRODUCT_IMG_LINK\" = ?  WHERE PRODUCT_ID = ?"),
    updateProductVariation("UPDATE PRODUCT_VARIANT_TABLE SET \"PRODUCT_GENDER_ID\" = ?, \"PRODUCT_SIZE_ID\" = ?, \"PRODUCT_PRICE\" = ?, \"PRODUCT_STOCK\" = ? WHERE VARIANT_ID = ?"),
    insertnewOrder("INSERT INTO ORDER_TABLE (USER_ID, ORDER_NAME, ORDER_QUANTITY, ORDER_PRICE, ORDER_ADDRESS, ORDER_DATE, ORDER_DATE_COMPLETED, ORDER_ISPAID, ORDER_IMG_LINK) \n"
            + "	VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)"),
    updateOrder("UPDATE ORDER_TABLE SET \"ORDER_DATE_COMPLETED\" = ?, \"ORDER_ISPAID\" = ? WHERE ORDER_ID = ?"),
    checkAvailability("SELECT DISTINCT\n"
            + "PRODUCT_VARIANT_TABLE.VARIANT_ID,\n"
            + "PRODUCT_GENDER_TABLE.PRODUCT_GENDER,\n"
            + "PRODUCT_SIZE_TABLE.PRODUCT_SIZE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_PRICE,\n"
            + "PRODUCT_VARIANT_TABLE.PRODUCT_STOCK\n"
            + "FROM PRODUCT_VARIANT_TABLE\n"
            + "JOIN PRODUCT_TABLE ON PRODUCT_TABLE.PRODUCT_ID = PRODUCT_VARIANT_TABLE.PRODUCT_ID\n"
            + "JOIN PRODUCT_GENDER_TABLE ON PRODUCT_VARIANT_TABLE.PRODUCT_GENDER_ID = PRODUCT_GENDER_TABLE.PRODUCT_GENDER_ID\n"
            + "JOIN PRODUCT_SIZE_TABLE ON PRODUCT_SIZE_TABLE.PRODUCT_SIZE_ID = PRODUCT_VARIANT_TABLE.PRODUCT_SIZE_ID\n"
            + "AND PRODUCT_GENDER_TABLE.PRODUCT_GENDER = ? \n"
            + "AND PRODUCT_SIZE_TABLE.PRODUCT_SIZE = ?\n"
            + "AND PRODUCT_VARIANT_TABLE.PRODUCT_ID = ?");

    private String selection;

    public String getQuery() {
        return this.selection;
    }

    private Queries(String selection) {
        this.selection = selection;
    }
}
