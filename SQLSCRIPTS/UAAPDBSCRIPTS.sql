/**
 * Author:  FV
 * Created: May 5, 2022
 */

<--TABLE INITIALIZATION-->
CREATE SCHEMA UAAP_APPAREL;

CREATE TABLE USER_TABLE(USER_ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1, Increment by 1),
USER_PASSWORD VARCHAR(1000) NOT NULL,
USER_ROLE VARCHAR(45) NOT NULL,
USER_EMAIL VARCHAR(100) UNIQUE NOT NULL
);

CREATE TABLE PRODUCT_TABLE (
PRODUCT_ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1, Increment by 1), 
PRODUCT_NAME VARCHAR(50) NOT NULL, 
PRODUCT_DESC VARCHAR(1000),
PRODUCT_SCHOOL VARCHAR(50) NOT NULL,
PRODUCT_CATEGORY VARCHAR (50) NOT NULL,
PRODUCT_IMG_LINK VARCHAR(1000) NOT NULL
);

CREATE TABLE PRODUCT_SIZE_TABLE(
PRODUCT_SIZE_ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY (Start with 1, Increment by 1),
PRODUCT_SIZE VARCHAR(50) NOT NULL
);

CREATE TABLE PRODUCT_GENDER_TABLE(
PRODUCT_GENDER_ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY (Start with 1, Increment by 1),
PRODUCT_GENDER VARCHAR(50) NOT NULL
);

CREATE TABLE PRODUCT_VARIANT_TABLE (
VARIANT_ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1, Increment by 1),
PRODUCT_ID INT NOT NULL REFERENCES PRODUCT_TABLE(PRODUCT_ID),
PRODUCT_GENDER_ID INT NOT NULL REFERENCES PRODUCT_GENDER_TABLE(PRODUCT_GENDER_ID),
PRODUCT_SIZE_ID INT NOT NULL REFERENCES PRODUCT_SIZE_TABLE(PRODUCT_SIZE_ID),
PRODUCT_PRICE INT NOT NULL,
PRODUCT_STOCK INT NOT NULL
);

CREATE TABLE ORDER_TABLE (ORDER_ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1, Increment by 1),
USER_ID INTEGER NOT NULL REFERENCES USER_TABLE(USER_ID),
ORDER_NAME VARCHAR(50) NOT NULL,
ORDER_QUANTITY INTEGER NOT NULL,
ORDER_PRICE INTEGER NOT NULL,
ORDER_ADDRESS VARCHAR(1000) NOT NULL,
ORDER_DATE DATE NOT NULL,
ORDER_DATE_COMPLETED DATE,
ORDER_ISPAID BOOLEAN,
ORDER_IMG_LINK VARCHAR(1000)
);

CREATE TABLE CART_TABLE (CART_ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1, Increment by 1),
USER_ID INTEGER NOT NULL REFERENCES USER_TABLE(USER_ID),
QUANTITY INTEGER NOT NULL,
CARTORDER_PRICE INTEGER NOT NULL,
CARORDER_IMGLINK VARCHAR (1000)
);
<--END INITIALIZAITON-->

<--ADMIN STATEMENTS-->


<--Orders-->
SELECT * FROM ORDER_TABLE ORDER BY ORDER_ISPAID ASC, ORDER_DATE DESC; 
<--END ORDERS-->

<-- ADMIN VIEW THE STOCK OF ITEMS-->
SELECT DISTINCT
PRODUCT_VARIANT_TABLE.PRODUCT_ID,
PRODUCT_TABLE.PRODUCT_NAME,
PRODUCT_TABLE.PRODUCT_DESC,
PRODUCT_TABLE.PRODUCT_SCHOOL,
PRODUCT_TABLE.PRODUCT_IMG_LINK,
PRODUCT_GENDER_TABLE.PRODUCT_GENDER,
PRODUCT_SIZE_TABLE.PRODUCT_SIZE,
PRODUCT_VARIANT_TABLE.PRODUCT_PRICE,
PRODUCT_VARIANT_TABLE.PRODUCT_STOCK
FROM PRODUCT_VARIANT_TABLE
JOIN PRODUCT_TABLE ON PRODUCT_TABLE.PRODUCT_ID = PRODUCT_VARIANT_TABLE.PRODUCT_ID
JOIN PRODUCT_GENDER_TABLE ON PRODUCT_VARIANT_TABLE.PRODUCT_GENDER_ID = PRODUCT_GENDER_TABLE.PRODUCT_GENDER_ID
JOIN PRODUCT_SIZE_TABLE ON PRODUCT_SIZE_TABLE.PRODUCT_SIZE_ID = PRODUCT_VARIANT_TABLE.PRODUCT_SIZE_ID
AND PRODUCT_TABLE.PRODUCT_SCHOOL = 'ADAMSON' 
AND PRODUCT_VARIANT_TABLE.PRODUCT_ID = 1 AND PRODUCT_VARIANT_TABLE.PRODUCT_STOCK > 0
ORDER BY PRODUCT_GENDER_TABLE.PRODUCT_GENDER ASC
AND PRODUCT_TABLE.PRODUCT_SCHOOL LIKE '%ADAMSON%'
AND PRODUCT_TABLE.PRODUCT_CATEGORY LIKE '%CAPS%'

SELECT PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESC,PRODUCT_SCHOOL,PRODUCT_CATEGORY,PRODUCT_IMG_LINK,F ,XS,PRICEXS,STOCKXS,S,PRICES,STOCKS,M,PRICEM,STOCKM,L,PRICEL,STOCKL,XL,PRICEXL,STOCKXL
FROM (SELECT PRODUCT_TABLE.PRODUCT_ID FROM PRODUCT_TABLE WHERE PRODUCT_ID = 1) PRODUCT_ID
CROSS JOIN (SELECT PRODUCT_TABLE.PRODUCT_NAME FROM PRODUCT_TABLE WHERE PRODUCT_ID = 1) PRODUCT_NAME
CROSS JOIN (SELECT PRODUCT_TABLE.PRODUCT_DESC FROM PRODUCT_TABLE WHERE PRODUCT_ID = 1) PRODUCT_DESC
CROSS JOIN (SELECT PRODUCT_TABLE.PRODUCT_SCHOOL FROM PRODUCT_TABLE WHERE PRODUCT_ID = 1) PRODUCT_SCHOOL
CROSS JOIN (SELECT PRODUCT_TABLE.PRODUCT_CATEGORY FROM PRODUCT_TABLE WHERE PRODUCT_ID = 1) PRODUCT_CATEGORY
CROSS JOIN (SELECT PRODUCT_TABLE.PRODUCT_IMG_LINK FROM PRODUCT_TABLE WHERE PRODUCT_ID = 1) PRODUCT_IMG_LINK
CROSS JOIN (SELECT COUNT(PRODUCT_GENDER_ID) AS F FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_GENDER_ID = 2 AND PRODUCT_ID = 1) F 

CROSS JOIN (SELECT COUNT(PRODUCT_SIZE_ID) AS XS FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_GENDER_ID = 1 AND PRODUCT_SIZE_ID = 1 AND PRODUCT_ID = 1) XS
CROSS JOIN (SELECT PRODUCT_VARIANT_TABLE.PRODUCT_PRICE AS PRICEXS FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = 1 AND PRODUCT_GENDER_ID = 2 AND PRODUCT_SIZE_ID = 1) PRICEXS
CROSS JOIN (SELECT PRODUCT_VARIANT_TABLE.PRODUCT_STOCK AS STOCKXS FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = 1 AND PRODUCT_GENDER_ID = 2 AND PRODUCT_SIZE_ID = 2)STOCKXS

CROSS JOIN (SELECT COUNT(PRODUCT_SIZE_ID) AS S FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_GENDER_ID = 1 AND PRODUCT_SIZE_ID = 2 AND PRODUCT_ID = 1) S
CROSS JOIN (SELECT PRODUCT_VARIANT_TABLE.PRODUCT_PRICE AS PRICES FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = 1 AND PRODUCT_GENDER_ID = 2 AND PRODUCT_SIZE_ID = 2) PRICES
CROSS JOIN (SELECT PRODUCT_VARIANT_TABLE.PRODUCT_STOCK AS STOCKS FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = 1 AND PRODUCT_GENDER_ID = 2 AND PRODUCT_SIZE_ID = 2)STOCKS

CROSS JOIN (SELECT COUNT(PRODUCT_SIZE_ID) AS M FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_GENDER_ID = 1 AND PRODUCT_SIZE_ID = 3 AND PRODUCT_ID = 1) M
CROSS JOIN (SELECT PRODUCT_VARIANT_TABLE.PRODUCT_PRICE AS PRICEM FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = 1 AND PRODUCT_GENDER_ID = 2 AND PRODUCT_SIZE_ID = 3) PRICEM
CROSS JOIN (SELECT PRODUCT_VARIANT_TABLE.PRODUCT_STOCK AS STOCKM FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = 1 AND PRODUCT_GENDER_ID = 2 AND PRODUCT_SIZE_ID = 3)STOCKM

CROSS JOIN (SELECT COUNT(PRODUCT_SIZE_ID) AS L FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_GENDER_ID = 1 AND PRODUCT_SIZE_ID = 4 AND PRODUCT_ID = 1) L
CROSS JOIN (SELECT PRODUCT_VARIANT_TABLE.PRODUCT_PRICE AS PRICEL FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = 1 AND PRODUCT_GENDER_ID = 2 AND PRODUCT_SIZE_ID = 4) PRICEL
CROSS JOIN (SELECT PRODUCT_VARIANT_TABLE.PRODUCT_STOCK AS STOCKL FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = 1 AND PRODUCT_GENDER_ID = 2 AND PRODUCT_SIZE_ID = 4)STOCKL

CROSS JOIN (SELECT COUNT(PRODUCT_SIZE_ID) AS XL FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_GENDER_ID = 1 AND PRODUCT_SIZE_ID = 5 AND PRODUCT_ID = 1) XL
CROSS JOIN (SELECT PRODUCT_VARIANT_TABLE.PRODUCT_PRICE AS PRICEXL FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = 1 AND PRODUCT_GENDER_ID = 2 AND PRODUCT_SIZE_ID = 5) PRICEXL
CROSS JOIN (SELECT PRODUCT_VARIANT_TABLE.PRODUCT_STOCK AS STOCKXL FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = 1 AND PRODUCT_GENDER_ID = 2 AND PRODUCT_SIZE_ID = 5)STOCKXL
<--END-->

SELECT * FROM PRODUCT_VARIANT_TABLE;
SELECT * FROM PRODUCT_TABLE;



<--UPDATE A PRODUCT-->
UPDATE PRODUCT_TABLE SET 
"PRODUCT_NAME"= ?
"PRODUCT_DESC"= ?
"PRODUCT_SCHOOL" = ?
"PRODUCT_IMG_LINK" = ?
WHERE PRODUCT_ID = ?

    <--UPDATE VARIANT OF PRODUCT-->
    UPDATE PRODUCT_VARIANT_TABLE SET 
    "PRODUCT_GENDER_ID"= ?
    "PRODUCT_SIZE_ID"= ?
    "PRODUCT_PRICE" = ?
    "PRODUCT_STOCK" = ?
    WHERE PRODUCT_ID = ?
<--UPDATE A PRODUCT END-->

<--DELETE PRODUCT-->
DELETE FROM PRODUCT_TABLE WHERE PRODUCT_ID = ?
DELETE FROM PRODUCT_VARIANT_TABLE WHERE PRODUCT_ID = ?
<--DELETE PRODUCT END-->

<--VIEW ALL USERS-->
SELECT 
USER_ID AS ID,
USER_FNAME AS FNAME,
USER_ROLE AS ROLE,
USER_EMAIL AS EMAIL
 FROM USER_TABLE; 
<--END-->

SELECT COUNT(ORDER_ID) FROM ORDER_TABLE WHERE ORDER_DATE_COMPLETED IS NULL; --ADMIN ONLY
SELECT COUNT(PRODUCT_ID) FROM PRODUCT_TABLE; --ADMIN ONLY

SELECT ALLUNIV,UP,UST,ATENEO,FEU,LA_SALLE,NU,ADAMSON,UE
FROM (SELECT COUNT(PRODUCT_ID) AS ALLUNIV FROM PRODUCT_TABLE) ALLUNIV
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS UP FROM PRODUCT_TABLE WHERE PRODUCT_SCHOOL = 'UP') UP
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS UST FROM PRODUCT_TABLE WHERE PRODUCT_SCHOOL = 'UST') UST
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS ATENEO FROM PRODUCT_TABLE WHERE PRODUCT_SCHOOL = 'ATENEO') ATENEO
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS FEU FROM PRODUCT_TABLE WHERE PRODUCT_SCHOOL = 'FEU') FEU
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS LA_SALLE FROM PRODUCT_TABLE WHERE PRODUCT_SCHOOL = 'LA SALLE') LA_SALLE
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS NU FROM PRODUCT_TABLE WHERE PRODUCT_SCHOOL = 'NU') NU
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS ADAMSON FROM PRODUCT_TABLE WHERE PRODUCT_SCHOOL='ADAMSON') ADAMSON
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS UE FROM PRODUCT_TABLE WHERE PRODUCT_SCHOOL = 'UE') UE

SELECT ALLP,M,F,U
FROM (SELECT COUNT(PRODUCT_ID) AS ALLP  FROM PRODUCT_TABLE) ALLP
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS M FROM PRODUCT_TABLE WHERE PRODUCT_GENDER LIKE '%M%') M
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS F FROM PRODUCT_TABLE WHERE PRODUCT_GENDER LIKE '%F%') F
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS U FROM PRODUCT_TABLE WHERE PRODUCT_GENDER LIKE '%U%') U

SELECT ALLS,XS,S,M,L,XL
FROM (SELECT COUNT(PRODUCT_ID) AS ALLS FROM PRODUCT_TABLE) ALLS
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS XS FROM PRODUCT_TABLE WHERE PRODUCT_SIZE LIKE '%XS%') XS
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS S FROM PRODUCT_TABLE WHERE  PRODUCT_SIZE LIKE '%S%') S
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS M FROM PRODUCT_TABLE WHERE  PRODUCT_SIZE LIKE '%M%') M
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS L FROM PRODUCT_TABLE WHERE  PRODUCT_SIZE LIKE '%L%') L
CROSS JOIN (SELECT COUNT(PRODUCT_ID) AS XL FROM PRODUCT_TABLE WHERE  PRODUCT_SIZE LIKE '%XL%') XL

SELECT * FROM ORDER_TABLE WHERE ORDER_DATE BETWEEN '2022-01-02' AND '2022-02-15' -- 1 constraint, 2 contraints 
AND ORDER_COMPLETED BETWEEN '2022-01-08' AND '2022-02-15' -- 2 contraints, 2 contraints
ORDER BY ORDER_DATE ASC; --FOR ADMIN ONLY

<--USER STATMENTS-->
SELECT * FROM ORDER_TABLE WHERE USER_ID=3 AND ORDER BY ORDER_ISPAID ASC, ORDER_DATE DESC; 
--ORDERED ITEMS BY USERS
--THAT HAVE NOT BEEN FULFILLED --FOR USERS

SELECT * FROM PRODUCT_TABLE WHERE PRODUCT_SCHOOL = 'UST';

SELECT DISTINCT * FROM PRODUCT_TABLE WHERE 
PRODUCT_SCHOOL LIKE '%ADAMSON%' AND
PRODUCT_CATEGORY LIKE '%CAPS%'; --UNIFIED SEARCH QUERY

-- search query for any item in the database regardless of lower or uppercase just choose one of the 
-- two queries below
SELECT DISTINCT * FROM PRODUCT_TABLE WHERE UPPER(PRODUCT_NAME) LIKE UPPER('%UST%')  OR
UPPER(PRODUCT_SCHOOL) LIKE UPPER('%UST%') 

SELECT DISTINCT * FROM PRODUCT_TABLE WHERE LOWER(PRODUCT_IMG_LINK) LIKE LOWER('%do%')

DELETE FROM ORDER_TABLE;
DELETE FROM CART_TABLE;

DELETE FROM PRODUCT_VARIANT_TABLE;
DELETE FROM PRODUCT_TABLE;

DELETE FROM USER_TABLE;
DELETE FROM USER_TABLE WHERE ID=3



INSERT INTO USER_TABLE (USER_FNAME, USER_LNAME, USER_PASSWORD, USER_ROLE, USER_EMAIL) 
	VALUES ('James', 'Cruz', '123', 'Customer', 'xd.gamil.om')
INSERT INTO USER_TABLE (USER_FNAME, USER_LNAME, USER_PASSWORD, USER_ROLE, USER_EMAIL) 
	VALUES ('May', 'Mambog', '123', 'Admin', 'Hatdog.gmail.com')
INSERT INTO USER_TABLE (USER_FNAME, USER_LNAME, USER_PASSWORD, USER_ROLE, USER_EMAIL) 
	VALUES ('Jared', 'Ruckel', '125', 'Customer', 'customer.gamil.com')


call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.user.app', 'app') --reset password
